
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>



export enum SignInResult {
	/// Login was successful
	Ok = "Ok",

	/// Invalid username or password provided
	InvalidUserNameOrPassword = "InvalidUserNameOrPassword",

	/// Email has not been confirmed by the user
	EmailNotConfirmed = "EmailNotConfirmed",

	/// The user account is deactivated or locked
	UserIsNotActive = "UserIsNotActive",

	/// The password has expired and needs to be changed
	PasswordExpired = "PasswordExpired",

	/// for LDAP auththentication: when username does not contain the domainname
	DomainNotSpecified = "DomainNotSpecified",

	/// for LDAP auththentication: when the domain is not alloed to use the system
	DomainNotRegistered = "DomainNotRegistered",

	/// for LDAP auththentication: when the domain use is not added for the system
	DomainUserNotRegistered = "DomainUserNotRegistered",

	/// for KAÜ auththentication: When token exchange is failed, or invalid token
	KAUTokenError = "KAUTokenError",

	/// for KAÜ auththentication: when no user registered in the system with given KAÜ user
	KAUUserNotFound = "KAUUserNotFound",

}
export interface TokensDTO {
	/// Access token used for authentication
	AccessToken:string;
	/// Expiration date and time of the access token
	AccessTokenExpiresAt:Date;
	/// Refresh token used to obtain a new access token
	RefreshToken:string;
	/// Expiration date and time of the refresh token
	RefreshTokenExpiresAt:Date;
}

export interface LoginResultDTO {
	/// The result of the login attempt
	result:SignInResult;
	/// Tokens returned when login is successful
	tokens:TokensDTO;
	/// Indicates whether two-factor authentication is required
	requires2FA:boolean;
	/// only filled when SignInResult is Ok
	accountId:string;
	accountName:string;
}

