// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/LoginIF_v1.proto
// </auto-generated>
// Original file comments:
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace IAM.Identities.Protos.LoginIF_v1 {
  public static partial class LoginIF_v1
  {
    static readonly string __ServiceName = "IAM.Identities.LoginIF_v1";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest> __Marshaller_IAM_Identities_LoginIF_v1_LoginWithEmailPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse> __Marshaller_IAM_Identities_LoginIF_v1_LoginWithEmailPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest> __Marshaller_IAM_Identities_LoginIF_v1_ConfirmEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse> __Marshaller_IAM_Identities_LoginIF_v1_ConfirmEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest> __Marshaller_IAM_Identities_LoginIF_v1_ChangePasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse> __Marshaller_IAM_Identities_LoginIF_v1_ChangePasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest> __Marshaller_IAM_Identities_LoginIF_v1_ForgotPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse> __Marshaller_IAM_Identities_LoginIF_v1_ForgotPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest> __Marshaller_IAM_Identities_LoginIF_v1_ResetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse> __Marshaller_IAM_Identities_LoginIF_v1_ResetPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest> __Marshaller_IAM_Identities_LoginIF_v1_LoginWithADRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse> __Marshaller_IAM_Identities_LoginIF_v1_LoginWithADResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest> __Marshaller_IAM_Identities_LoginIF_v1_Login2FARequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse> __Marshaller_IAM_Identities_LoginIF_v1_Login2FAResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest> __Marshaller_IAM_Identities_LoginIF_v1_RefreshTokensRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse> __Marshaller_IAM_Identities_LoginIF_v1_RefreshTokensResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest> __Marshaller_IAM_Identities_LoginIF_v1_GetKAULoginURLRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse> __Marshaller_IAM_Identities_LoginIF_v1_GetKAULoginURLResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse> __Method_LoginWithEmailPassword = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoginWithEmailPassword",
        __Marshaller_IAM_Identities_LoginIF_v1_LoginWithEmailPasswordRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_LoginWithEmailPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse> __Method_ConfirmEmail = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmEmail",
        __Marshaller_IAM_Identities_LoginIF_v1_ConfirmEmailRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_ConfirmEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse> __Method_ChangePassword = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangePassword",
        __Marshaller_IAM_Identities_LoginIF_v1_ChangePasswordRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_ChangePasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse> __Method_ForgotPassword = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ForgotPassword",
        __Marshaller_IAM_Identities_LoginIF_v1_ForgotPasswordRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_ForgotPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse> __Method_ResetPassword = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPassword",
        __Marshaller_IAM_Identities_LoginIF_v1_ResetPasswordRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_ResetPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse> __Method_LoginWithAD = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoginWithAD",
        __Marshaller_IAM_Identities_LoginIF_v1_LoginWithADRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_LoginWithADResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse> __Method_Login2FA = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login2FA",
        __Marshaller_IAM_Identities_LoginIF_v1_Login2FARequest,
        __Marshaller_IAM_Identities_LoginIF_v1_Login2FAResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse> __Method_RefreshTokens = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RefreshTokens",
        __Marshaller_IAM_Identities_LoginIF_v1_RefreshTokensRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_RefreshTokensResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse> __Method_GetKAULoginURL = new grpc::Method<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKAULoginURL",
        __Marshaller_IAM_Identities_LoginIF_v1_GetKAULoginURLRequest,
        __Marshaller_IAM_Identities_LoginIF_v1_GetKAULoginURLResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::IAM.Identities.Protos.LoginIF_v1.LoginIFV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LoginIF_v1</summary>
    [grpc::BindServiceMethod(typeof(LoginIF_v1), "BindService")]
    public abstract partial class LoginIF_v1Base
    {
      /// <summary>
      //// Login using email and password credentials
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse> LoginWithEmailPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse> ConfirmEmail(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse> ChangePassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse> ForgotPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse> ResetPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      //// Complete login with Active Directory
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse> LoginWithAD(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      //// Complete login with two-factor authentication (TOTP)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse> Login2FA(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      //// refresh bearer tokens
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse> RefreshTokens(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      //// getting the KAU url, expects the frontend url, where the frontend must be redirected
      //// the redirect url format is: {redirectUrl}/?accessToken={string}&amp;refreshToken={string&amp;requires2FA={boolean}&amp;accessTokenExpiresAt={string}&amp;refreshTokenExpiresAt={string}
      //// Generates the KAÜ login URL with a signed state containing the frontend returnUrl.
      //// Flow:
      //// 1. Browser calls this endpoint (GetKAULoginUrl) and passes the desired frontend returnUrl.
      //// 2. Backend builds the KAÜ authorize URL with its own callback URL and the signed state.
      //// 3. Browser is redirected to KAÜ login page.
      //// 4. KAÜ authenticates the user and redirects the browser to the backend callback URL with code + state.
      //// 5. Backend exchanges the code for tokens and finally redirects the browser to the original frontend returnUrl.
      //// Note: For local development KAÜ must be able to call the backend callback URL (use ngrok/dev tunnel).
      //// returns: the KAU url, where the browser must be redirected.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse> GetKAULoginURL(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LoginIF_v1</summary>
    public partial class LoginIF_v1Client : grpc::ClientBase<LoginIF_v1Client>
    {
      /// <summary>Creates a new client for LoginIF_v1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LoginIF_v1Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LoginIF_v1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LoginIF_v1Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LoginIF_v1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LoginIF_v1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      //// Login using email and password credentials
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse LoginWithEmailPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginWithEmailPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Login using email and password credentials
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse LoginWithEmailPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoginWithEmailPassword, null, options, request);
      }
      /// <summary>
      //// Login using email and password credentials
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse> LoginWithEmailPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginWithEmailPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Login using email and password credentials
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse> LoginWithEmailPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoginWithEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse ConfirmEmail(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse ConfirmEmail(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse> ConfirmEmailAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse> ConfirmEmailAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse ChangePassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse ChangePassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse> ChangePasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse> ChangePasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse ForgotPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ForgotPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse ForgotPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ForgotPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse> ForgotPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ForgotPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse> ForgotPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ForgotPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse ResetPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse ResetPassword(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse> ResetPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse> ResetPasswordAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPassword, null, options, request);
      }
      /// <summary>
      //// Complete login with Active Directory
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse LoginWithAD(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginWithAD(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Complete login with Active Directory
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse LoginWithAD(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoginWithAD, null, options, request);
      }
      /// <summary>
      //// Complete login with Active Directory
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse> LoginWithADAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginWithADAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Complete login with Active Directory
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse> LoginWithADAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoginWithAD, null, options, request);
      }
      /// <summary>
      //// Complete login with two-factor authentication (TOTP)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse Login2FA(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login2FA(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Complete login with two-factor authentication (TOTP)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse Login2FA(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login2FA, null, options, request);
      }
      /// <summary>
      //// Complete login with two-factor authentication (TOTP)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse> Login2FAAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login2FAAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// Complete login with two-factor authentication (TOTP)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse> Login2FAAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login2FA, null, options, request);
      }
      /// <summary>
      //// refresh bearer tokens
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse RefreshTokens(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshTokens(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// refresh bearer tokens
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse RefreshTokens(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RefreshTokens, null, options, request);
      }
      /// <summary>
      //// refresh bearer tokens
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse> RefreshTokensAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshTokensAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// refresh bearer tokens
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse> RefreshTokensAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RefreshTokens, null, options, request);
      }
      /// <summary>
      //// getting the KAU url, expects the frontend url, where the frontend must be redirected
      //// the redirect url format is: {redirectUrl}/?accessToken={string}&amp;refreshToken={string&amp;requires2FA={boolean}&amp;accessTokenExpiresAt={string}&amp;refreshTokenExpiresAt={string}
      //// Generates the KAÜ login URL with a signed state containing the frontend returnUrl.
      //// Flow:
      //// 1. Browser calls this endpoint (GetKAULoginUrl) and passes the desired frontend returnUrl.
      //// 2. Backend builds the KAÜ authorize URL with its own callback URL and the signed state.
      //// 3. Browser is redirected to KAÜ login page.
      //// 4. KAÜ authenticates the user and redirects the browser to the backend callback URL with code + state.
      //// 5. Backend exchanges the code for tokens and finally redirects the browser to the original frontend returnUrl.
      //// Note: For local development KAÜ must be able to call the backend callback URL (use ngrok/dev tunnel).
      //// returns: the KAU url, where the browser must be redirected.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse GetKAULoginURL(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKAULoginURL(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// getting the KAU url, expects the frontend url, where the frontend must be redirected
      //// the redirect url format is: {redirectUrl}/?accessToken={string}&amp;refreshToken={string&amp;requires2FA={boolean}&amp;accessTokenExpiresAt={string}&amp;refreshTokenExpiresAt={string}
      //// Generates the KAÜ login URL with a signed state containing the frontend returnUrl.
      //// Flow:
      //// 1. Browser calls this endpoint (GetKAULoginUrl) and passes the desired frontend returnUrl.
      //// 2. Backend builds the KAÜ authorize URL with its own callback URL and the signed state.
      //// 3. Browser is redirected to KAÜ login page.
      //// 4. KAÜ authenticates the user and redirects the browser to the backend callback URL with code + state.
      //// 5. Backend exchanges the code for tokens and finally redirects the browser to the original frontend returnUrl.
      //// Note: For local development KAÜ must be able to call the backend callback URL (use ngrok/dev tunnel).
      //// returns: the KAU url, where the browser must be redirected.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse GetKAULoginURL(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKAULoginURL, null, options, request);
      }
      /// <summary>
      //// getting the KAU url, expects the frontend url, where the frontend must be redirected
      //// the redirect url format is: {redirectUrl}/?accessToken={string}&amp;refreshToken={string&amp;requires2FA={boolean}&amp;accessTokenExpiresAt={string}&amp;refreshTokenExpiresAt={string}
      //// Generates the KAÜ login URL with a signed state containing the frontend returnUrl.
      //// Flow:
      //// 1. Browser calls this endpoint (GetKAULoginUrl) and passes the desired frontend returnUrl.
      //// 2. Backend builds the KAÜ authorize URL with its own callback URL and the signed state.
      //// 3. Browser is redirected to KAÜ login page.
      //// 4. KAÜ authenticates the user and redirects the browser to the backend callback URL with code + state.
      //// 5. Backend exchanges the code for tokens and finally redirects the browser to the original frontend returnUrl.
      //// Note: For local development KAÜ must be able to call the backend callback URL (use ngrok/dev tunnel).
      //// returns: the KAU url, where the browser must be redirected.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse> GetKAULoginURLAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKAULoginURLAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      //// getting the KAU url, expects the frontend url, where the frontend must be redirected
      //// the redirect url format is: {redirectUrl}/?accessToken={string}&amp;refreshToken={string&amp;requires2FA={boolean}&amp;accessTokenExpiresAt={string}&amp;refreshTokenExpiresAt={string}
      //// Generates the KAÜ login URL with a signed state containing the frontend returnUrl.
      //// Flow:
      //// 1. Browser calls this endpoint (GetKAULoginUrl) and passes the desired frontend returnUrl.
      //// 2. Backend builds the KAÜ authorize URL with its own callback URL and the signed state.
      //// 3. Browser is redirected to KAÜ login page.
      //// 4. KAÜ authenticates the user and redirects the browser to the backend callback URL with code + state.
      //// 5. Backend exchanges the code for tokens and finally redirects the browser to the original frontend returnUrl.
      //// Note: For local development KAÜ must be able to call the backend callback URL (use ngrok/dev tunnel).
      //// returns: the KAU url, where the browser must be redirected.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse> GetKAULoginURLAsync(global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKAULoginURL, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LoginIF_v1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new LoginIF_v1Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LoginIF_v1Base serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_LoginWithEmailPassword, serviceImpl.LoginWithEmailPassword)
          .AddMethod(__Method_ConfirmEmail, serviceImpl.ConfirmEmail)
          .AddMethod(__Method_ChangePassword, serviceImpl.ChangePassword)
          .AddMethod(__Method_ForgotPassword, serviceImpl.ForgotPassword)
          .AddMethod(__Method_ResetPassword, serviceImpl.ResetPassword)
          .AddMethod(__Method_LoginWithAD, serviceImpl.LoginWithAD)
          .AddMethod(__Method_Login2FA, serviceImpl.Login2FA)
          .AddMethod(__Method_RefreshTokens, serviceImpl.RefreshTokens)
          .AddMethod(__Method_GetKAULoginURL, serviceImpl.GetKAULoginURL).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LoginIF_v1Base serviceImpl)
    {
      serviceBinder.AddMethod(__Method_LoginWithEmailPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithEmailPasswordResponse>(serviceImpl.LoginWithEmailPassword));
      serviceBinder.AddMethod(__Method_ConfirmEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ConfirmEmailResponse>(serviceImpl.ConfirmEmail));
      serviceBinder.AddMethod(__Method_ChangePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ChangePasswordResponse>(serviceImpl.ChangePassword));
      serviceBinder.AddMethod(__Method_ForgotPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ForgotPasswordResponse>(serviceImpl.ForgotPassword));
      serviceBinder.AddMethod(__Method_ResetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_ResetPasswordResponse>(serviceImpl.ResetPassword));
      serviceBinder.AddMethod(__Method_LoginWithAD, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_LoginWithADResponse>(serviceImpl.LoginWithAD));
      serviceBinder.AddMethod(__Method_Login2FA, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FARequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_Login2FAResponse>(serviceImpl.Login2FA));
      serviceBinder.AddMethod(__Method_RefreshTokens, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_RefreshTokensResponse>(serviceImpl.RefreshTokens));
      serviceBinder.AddMethod(__Method_GetKAULoginURL, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLRequest, global::IAM.Identities.Protos.LoginIF_v1.LoginIF_v1_GetKAULoginURLResponse>(serviceImpl.GetKAULoginURL));
    }

  }
}
#endregion
