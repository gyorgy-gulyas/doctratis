
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using IAM.Identities;
using ServiceKit.Net;

namespace IAM.Identities
{
	public partial interface IAuthRepository
	{
		/// <return>Identity.Auth</return>
		public Task<Response<Identity.Auth>> createAuth(CallingContext ctx, Identity.Auth auth);

		/// <return>Identity.Auth</return>
		public Task<Response<Identity.Auth>> updateAuth(CallingContext ctx, Identity.Auth auth);

		/// <return>Identity.Auth</return>
		public Task<Response<Identity.Auth>> getAuth(CallingContext ctx, string accountId, string authId);

		/// <return>List<Identity.Auth></return>
		public Task<Response<List<Identity.Auth>>> listAuthsForAccount(CallingContext ctx, string accountId);

		/// <return>List<Identity.Auth></return>
		public Task<Response<List<Identity.Auth>>> listAuthsForAccountByMethod(CallingContext ctx, string accountId, Identity.Auth.Methods method);

		/// <return>Identity.EmailAuth</return>
		public Task<Response<Identity.EmailAuth>> getEmailAuth(CallingContext ctx, string accountId, string authId);

		/// <return>Identity.EmailAuth</return>
		public Task<Response<Identity.EmailAuth>> findEmailAuthByEmail(CallingContext ctx, string email);

		/// <return>Identity.ADAuth</return>
		public Task<Response<Identity.ADAuth>> getADAuth(CallingContext ctx, string accountId, string authId);

		/// <return>Identity.ADAuth</return>
		public Task<Response<Identity.ADAuth>> findADAuthByDomainAndUser(CallingContext ctx, string ldapDomainId, string userName);

		/// <return>List<Identity.ADAuth></return>
		public Task<Response<List<Identity.ADAuth>>> listADAuthsByDomain(CallingContext ctx, string ldapDomainId);

		/// <return>Identity.KAUAuth</return>
		public Task<Response<Identity.KAUAuth>> getKAUAuth(CallingContext ctx, string accountId, string authId);

		/// <return>Identity.KAUAuth</return>
		public Task<Response<Identity.KAUAuth>> findKAUAuthByUserId(CallingContext ctx, string kauUserId);

		/// <return>Identity.CertificateAuth</return>
		public Task<Response<Identity.CertificateAuth>> getCertificateAuth(CallingContext ctx, string accountId, string authId);

		/// <return>Identity.CertificateAuth</return>
		public Task<Response<Identity.CertificateAuth>> findCertificateAuthByThumbprint(CallingContext ctx, string thumbprint);

		/// <return>Identity.CertificateAuth</return>
		public Task<Response<Identity.CertificateAuth>> findCertificateAuthBySerial(CallingContext ctx, string serialNumber);


	}
}
