
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>


namespace Core.Identities.Identity
{
	public partial class ContactInfo : IEquatable<ContactInfo>
	{
		public string contactType { get; set; }
		public string email { get; set; }
		public string phoneNumber { get; set; }

		#region Clone 
		public virtual ContactInfo Clone()
		{
			ContactInfo clone = new();

			clone.contactType = new string(contactType.ToCharArray());
			clone.email = new string(email.ToCharArray());
			clone.phoneNumber = new string(phoneNumber.ToCharArray());

			return clone;
		}
		#endregion Clone 

		#region Equals & HashCode 
		public bool Equals( ContactInfo other )
		{
			if (other is null) return false;

			if(contactType != other.contactType) return false;
			if(email != other.email) return false;
			if(phoneNumber != other.phoneNumber) return false;

			return true;
		}

		public override bool Equals(object obj) => Equals(obj as ContactInfo);

		public override int GetHashCode()
		{
			var hash = new HashCode();
			hash.Add(contactType);
			hash.Add(email);
			hash.Add(phoneNumber);

			return hash.ToHashCode();
		}
		#endregion Equals & HashCode 
	}

}
