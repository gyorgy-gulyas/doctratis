
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using TemplateManagement.Projects;

namespace TemplateManagement.Projects.Project
{
	public partial class ProjectAccess : IBase
	{
		public enum Roles
		{
			/// Csak olvasásra jogosult
			Reader,

			/// Módosíthat sablonokat, mappákat
			Editor,

			/// Teljes hozzáférés, hozzáférések kezelése is
			Owner,

			/// Csak audit/jogosultság-nézethez van hozzáférése
			Auditor,

			/// Csak a hozzáférések kezelése
			Admin,

		}
		public enum Statuses
		{
			/// Meghívás elküldve, még nincs elfogadva. (pl. emailes invite)
			Pending,

			/// Hozzáférés él, a felhasználó vagy rendszer rendelkezik a szerepkörrel
			Active,

			/// Átmenetileg inaktiválva (pl. biztonsági okból, fiók zárolása).
			Suspended,

			/// Visszavonva manuálisan. Már nem érvényes.
			Revoked,

			/// Törölve, de még auditálás miatt megvan az adat.
			Deleted,

		}
		#region IBase
		public string id { get; set; }
		public string etag { get; set; }
		public DateTime LastUpdate { get; set; }
		#endregion IBase

		public string ProjectId { get; set; }
		public string IdentityId { get; set; }
		public Roles Role { get; set; }
		public Statuses Status { get; set; }

		#region Clone & Copy 
		virtual public ProjectAccess Clone()
		{
			ProjectAccess clone = new();

			// unfold begin: Base
			clone.id = new string(id.ToCharArray());
			clone.etag = new string(etag.ToCharArray());
			clone.LastUpdate = LastUpdate;
			// unfold end Base

			clone.ProjectId = new string(ProjectId.ToCharArray());
			clone.IdentityId = new string(IdentityId.ToCharArray());
			clone.Role = Role;
			clone.Status = Status;

			return clone;
		}
		#endregion Clone & Copy 
	}

}
